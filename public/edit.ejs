<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.css"></link>
    <link rel="icon" href="./Images/LogoEmbed.png" type="image/x-icon" />
    <link rel="stylesheet" href="/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap" rel="stylesheet">
    <title>Azare</title>
  </head>
  <body>
  <div style="position: relative;">
    <div id="ErrorBox" style="z-index: 3;visibility:hidden;position: absolute;left:50%;transform: translate(-50%);margin-top: 100px;background-color: rgba(125, 0, 0, 0.5);align-self:center;margin-top:50px;box-shadow: 0 0 0 2px red; border-width: 10px; border-radius: 10px; width:400px; height:75px;display: flex;justify-content: center;align-items: center;">
      <p id="ErrorText" style="font-family: 'Roboto', sans-serif; color:white;">An error has occurred.</p>
    </div>
  </div>
    <div class="container">
      <div class="left" style="height:100%;width:20%;">
        <div class="header"></div>
        <div class="main"></div>
      </div>
      <div class="middle" style="height:100%;width:60%;">
        <div class="header">
          <div style="height:100%;;display:flex;align-items: center;"><button onclick="HomePage()" class="HoverPointer" style="height:100%;align-items:center;border-width:0px;background-color: rgba(0,0,0,0);display: flex; flex-direction: row;"><img draggable="false" src="./Images/Logo.png" style="height: 70%;"><p style="margin-left:10px;font-size:large;font-family: 'Roboto', sans-serif;">AZARE</p></button></div>
          <div id="ActionDiv" style="visibility:hidden;height:100%;display:flex;align-items: center;"><button id="YourProfileButton" onclick="GoToProfile()" class="fadeBgHover" title="Your profile" style="display:none;padding-left:10px;padding-right:10px;height:100%;display: flex; align-items: center; border-width: 0px;"><div style="height:100%;display:flex;align-items: center;margin-right: 10px;"><p id="UsernameDisplay" style="margin:0px;display:none;font-family: 'Roboto', sans-serif;"></p><img id="VerifiedSymbol" src="./Images/VERIFIED.png" draggable="false" style="display:none;height:25%;margin-left: 3px;"></div><img id="ProfileImage" draggable="false" src="./UserUploaded/images/default.png" style="display:none;height:60%;border-radius:180px;border-width: 50px; border-color: #0056a1;"></button><button id="OpenLogInWindow" class="loginButton" style="font-family: 'Roboto', sans-serif; margin-right: 10px;">Sign in</button><button id="OpenSignUpWindow" class="signupButton" style="font-family: 'Roboto', sans-serif;">Sign up</button><button id="burger-menu" style="display: none; background-color: rgba(0,0,0,0); border-width: 0px;"><i class="fa-sharp fa-solid fa-bars"></i></button></div>
          <div id="pop-up-window" style="border-radius: 5px; background-color: #232323;">
            <div style="border-width: 0px;display: flex; flex-direction: row;align-items: center;">
              <button onclick="TerminateSession()" style="background-color: #b00909; height:20%;border-width: 0px;">Sign out</button>
            </div>
          </div>
        </div>
        <div class="main">
          <div style="width:100%; display:flex;height:20vh; align-items: center; justify-content: center; position: relative;">
            <label for="PFPinput" style="height:100%;border-radius: 100%;border-width: 0px; background-color: rgba(0,0,0,0); display: flex; align-items: center;">
              <img style="z-index: 0; height:80%" src="./Images/ADD.png">
              <img title="Change profile picture" class="SelectImage" id="UserProfilePicture" draggable="false" src="./UserUploaded/images/default.png" style="position: absolute;object-fit: cover;border-radius: 100%; height:80%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); object-fit: cover;">
            </label>
            <input type="file" accept="image/jpeg, image/png, image/jpg" id="PFPinput" style="display:none;">
          
          </div>
            <hr style="height:2px;border-width: 0px;background-color: rgb(55, 55, 55);">
            <div id="saveNotification" style="width:100%;margin-top: 10px; height:5vh;border-radius:10px;background-color: rgb(27, 27, 27);display: none;justify-content: space-between;align-items: center;">
              <div><p style="font-family: 'Roboto', sans-serif;margin-left: 20px;">Make sure to save your changes before leaving.</p></div>
              <div><button onclick="SaveProfile()" id="SaveBTN" class="SaveButton" style="position:relative;height: 45px; width: 100px; margin-right: 10px; border-radius: 10px; border-width: 0px; font-family: 'Roboto', sans-serif;">Save</button></div>
            </div>
            <div style="margin-top: 10px;width:100%;height:7vh;background-color: rgb(27, 27, 27);font-family: 'Roboto', sans-serif; border-radius: 10px; border-width: 0px; display: flex; flex-direction: column; justify-content: center;">
              <div style="width:100%;display: flex; justify-content: center; flex-direction: column; align-items: center;"><p style="margin:0px;margin-bottom:5px;font-size: large; margin-left: 10px;">Username</p><textarea maxlength="20" style="width:95%;padding:10px; border-width: 0px; border-radius: 10px;background-color: rgb(11, 11, 11);font-family: 'Roboto', sans-serif;" id="userUsername" rows="1" cols="50"></textarea></div>
            </div>
            <div style="margin-top: 10px;width:100%;height:7vh;background-color: rgb(27, 27, 27);font-family: 'Roboto', sans-serif; border-radius: 10px; border-width: 0px; display: flex; flex-direction: column; justify-content: center;">
              <div style="width:100%;display: flex; justify-content: center; flex-direction: column; align-items: center;"><p style="margin:0px;margin-bottom:5px;font-size: large; margin-left: 10px;">Status</p><textarea maxlength="100" style="width:95%;padding:10px; border-width: 0px; border-radius: 10px;background-color: rgb(11, 11, 11);font-family: 'Roboto', sans-serif;" id="userStatus" rows="1" cols="50"></textarea></div>
            </div>
        </div>
      </div>
      <div class="right" style="height:100%;width:20%;">
        <div class="header"></div>
        <div class="main"></div>
      </div>
    </div>
    <script>


let ChangedProfileImage = false
let ChangedStatus = false
let ChangedUsername = false

const urlParams = new URLSearchParams(window.location.search);

document.getElementById("userStatus").addEventListener('change', () => {
  ChangedStatus = true
  document.getElementById("saveNotification").style.display = "flex";
})

document.getElementById("userUsername").addEventListener('change', () => {
  ChangedUsername = true
  document.getElementById("saveNotification").style.display = "flex";
})


const input = document.getElementById('PFPinput');
const img = document.getElementById('UserProfilePicture');
let processedImage = null;


input.addEventListener('change', () => {
  ChangedProfileImage = true
  document.getElementById("saveNotification").style.display = "flex";
  const file = input.files[0];
  const reader = new FileReader();
  reader.readAsDataURL(file);
  reader.onload = () => {
    const image = new Image();
    image.src = reader.result;
    image.onload = () => {
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');
      const size = Math.min(image.width, image.height);
      canvas.width = size;
      canvas.height = size;
      ctx.drawImage(image, (image.width - size) / 2, (image.height - size) / 2, size, size, 0, 0, size, size);
      const dataUrl = canvas.toDataURL('image/jpeg');
      img.src = dataUrl;
      processedImage = dataUrl; // store the processed image in a variable
    }
  }
});

const burgerMenu = document.getElementById('burger-menu');
const popUpWindow = document.getElementById('pop-up-window');

burgerMenu.addEventListener('click', function(event) {
  const burgerMenuRect = burgerMenu.getBoundingClientRect();
  popUpWindow.style.top = burgerMenuRect.bottom + 'px';
  popUpWindow.style.right = window.innerWidth - burgerMenuRect.right + 'px';
  popUpWindow.style.display = 'block';

  event.stopPropagation(); // prevent the click event from propagating to document
});

popUpWindow.addEventListener('click', function(event) {
  event.stopPropagation(); // prevent the click event from propagating to document
});

document.addEventListener('click', function() {
  popUpWindow.style.display = 'none';
});

function TerminateSession() {
   fetch('/Session/Remove', {
      method: 'POST',
      headers: {
         'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: formData.toString()
      })
      .then(response => response.json())
      .then(data => {
        if (data.err) {
          return alert(data.message)
        }

        location.href = "/home"
      })
      .catch(error => console.error(error));
    }

function SaveProfile() {
  let MultipleActions = false

  if (ChangedProfileImage && ChangedStatus) {
    MultipleActions = true
  }

  if (urlParams.get('id')) {
    const userID = urlParams.get('id')
    if (ChangedProfileImage) {

        document.getElementById("SaveBTN").innerHTML = "<span class='spinner'></span>";
        document.getElementById("ProfileImage").src = document.getElementById("UserProfilePicture").src;
      
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        const img = new Image();
        img.src = document.getElementById("UserProfilePicture").src;
        img.onload = () => {
          const size = Math.min(img.width, img.height);
          canvas.width = size;
          canvas.height = size;
          ctx.drawImage(img, (img.width - size) / 2, (img.height - size) / 2, size, size, 0, 0, size, size);
          canvas.toBlob((blob) => {
            const formData = new FormData();
            formData.append('image', blob);
            formData.append('id', userID);
            formData.append('MultiAction', MultipleActions);
            fetch('/SaveProfileImage', {
              method: 'POST',
              body: formData
            })
            .then(response => response.json())
            .then(data => {
              if (data) {
                if (data.err) {
                  console.log("Something went wrong.")
                } else {
                  const errorBox = document.getElementById("ErrorBox");
                  errorBox.style.backgroundColor = "rgba(0,100,0,0.5)";
      
                  document.getElementById("saveNotification").style.display = "none";
                  document.getElementById("SaveBTN").innerHTML = "Save";
                  errorBox.style.boxShadow = "0 0 0 2px green";
                  document.getElementById("ErrorText").innerHTML = `${data.message}`
                  document.getElementById("ErrorBox").style.visibility = "visible";
    
                  setTimeout(function() {
                    location.href = `/profile?id=${urlParams.get('id')}`;
                  }, 2000);
                }
              }
            })
            .catch(error => console.error(error));
          }, 'image/jpeg', 0.8);
        };
      }

      
      if (ChangedStatus) {
        let ChangedStatus = document.getElementById("userStatus").value
        const formData = new FormData();
        formData.append('id', userID);
        formData.append('userStatus', ChangedStatus);
        formData.append('MultiAction', MultipleActions);
        fetch('/saveProfileStatus', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          if (data) {
            if (data.err) {
              // Error occured
            } else {
              const errorBox = document.getElementById("ErrorBox");
              errorBox.style.backgroundColor = "rgba(0,100,0,0.5)";
  
              document.getElementById("saveNotification").style.display = "none";
              document.getElementById("SaveBTN").innerHTML = "Save";
              errorBox.style.boxShadow = "0 0 0 2px green";
              document.getElementById("ErrorText").innerHTML = `${data.message}`
              document.getElementById("ErrorBox").style.visibility = "visible";

              setTimeout(function() {
                    location.href = `/profile?id=${urlParams.get('id')}`;
                  }, 2000);
            }
          }
        })
        .catch(error => console.error(error));
      }
      if (ChangedUsername) {
        let NewUsername = document.getElementById("userUsername").value
        const formData = new FormData();
        formData.append('id', userID);
        formData.append('userUsername', NewUsername);
        formData.append('MultiAction', MultipleActions);
        fetch('/saveProfileUsername', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          if (data) {
            if (data.err) {
              const errorBox = document.getElementById("ErrorBox");
  
              document.getElementById("SaveBTN").innerHTML = "Save";
              document.getElementById("ErrorText").innerHTML = `${data.message}`
              document.getElementById("ErrorBox").style.visibility = "visible";
            } else {
              const errorBox = document.getElementById("ErrorBox");
              errorBox.style.backgroundColor = "rgba(0,100,0,0.5)";
  
              document.getElementById("saveNotification").style.display = "none";
              document.getElementById("SaveBTN").innerHTML = "Save";
              errorBox.style.boxShadow = "0 0 0 2px green";
              document.getElementById("ErrorText").innerHTML = `${data.message}`
              document.getElementById("ErrorBox").style.visibility = "visible";

              setTimeout(function() {
                    location.href = `/profile?id=${urlParams.get('id')}`;
                  }, 2000);
            }
          }
        })
        .catch(error => console.error(error));
      }
    }
}












if (urlParams.get('id')) {
  fetch(`/fetchUser?id=${urlParams.get('id')}`, {
    method: 'GET',
    headers: {
      'Accept': 'application/json',
      'Content-Type': 'application/x-www-form-urlencoded'
    },
  })
    .then(response => response.json())
    .then(data => {
        document.getElementById("UserProfilePicture").src = `./UserUploaded/images/${data.image}`
        document.getElementById("userUsername").innerText = `${data.username}`
        document.getElementById("userStatus").innerText = `${data.status}`
    })
    .catch(error => console.error(error));
}


function OpenFiles() {
  document.getElementById('fileInput').click()
}


if (urlParams.get('id')) {
    fetch(`/fetchEditPermissions?id=${urlParams.get('id')}`, {
        method: 'GET',
        headers: {
        },
    })
    .then(response => response.json())
    .then(data => {
        if (data.res == "aAuth") {

        } else {
            location.href = '/home';
        }
    })
    .catch(error => console.error(error));
}

function HomePage() {
        location.href = '/home';
      }

      let SIGNEDINID = ""

    function GoToProfile() {
      location.href = `/profile?id=${SIGNEDINID}`
    }

const formData = new URLSearchParams();
      fetch('/authenticate', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: formData.toString()
      })
      .then(response => response.json())
      .then(data => {
        if (data.action == true)  {
          document.getElementById("UsernameDisplay").innerHTML = `${data.username}`
          document.getElementById("ProfileImage").src = `./UserUploaded/images/${data.image}`
          SIGNEDINID = data.id
          if (data.verified) {
            if (data.verified == 1) {
              // DISPLAY VERIFICATION BADGE ON HEADER? UNCOMMENT IF YES.
              //document.getElementById("VerifiedSymbol").style.display = "inline";
            }
          }
          document.getElementById("OpenLogInWindow").style.display = "none";
          document.getElementById("OpenSignUpWindow").style.display = "none";
          document.getElementById("ProfileImage").style.display = "inline";
          document.getElementById("UsernameDisplay").style.display = "inline";
          document.getElementById("burger-menu").style.display = "inline";
          document.getElementById("YourProfileButton").style.display = "flex";
          document.getElementById("ActionDiv").style.visibility = "visible";
        } else {
          document.getElementById("OpenLogInWindow").style.display = "inline";
          document.getElementById("OpenSignUpWindow").style.display = "inline";
          document.getElementById("ProfileImage").style.display = "none";
          document.getElementById("UsernameDisplay").style.display = "none";
          document.getElementById("ActionDiv").style.visibility = "visible";
        }

      })
      .catch(error => console.error(error));
</script>
</html>